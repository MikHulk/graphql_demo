-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module CustomersApi.Mutation exposing (..)

import CustomersApi.InputObject
import CustomersApi.Interface
import CustomersApi.Object
import CustomersApi.Scalar
import CustomersApi.ScalarCodecs
import CustomersApi.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode exposing (Decoder)


type alias AddNewBuildingForSiteOptionalArguments =
    { position : OptionalArgument CustomersApi.InputObject.PositionInput }


type alias AddNewBuildingForSiteRequiredArguments =
    { label : String
    , siteId : Int
    }


addNewBuildingForSite :
    (AddNewBuildingForSiteOptionalArguments -> AddNewBuildingForSiteOptionalArguments)
    -> AddNewBuildingForSiteRequiredArguments
    -> SelectionSet decodesTo CustomersApi.Object.Building
    -> SelectionSet decodesTo RootMutation
addNewBuildingForSite fillInOptionals____ requiredArgs____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { position = Absent }

        optionalArgs____ =
            [ Argument.optional "position" filledInOptionals____.position CustomersApi.InputObject.encodePositionInput ]
                |> List.filterMap Basics.identity
    in
    Object.selectionForCompositeField "addNewBuildingForSite" (optionalArgs____ ++ [ Argument.required "label" requiredArgs____.label Encode.string, Argument.required "siteId" requiredArgs____.siteId Encode.int ]) object____ Basics.identity


type alias AddNewBuildingForNewSiteOptionalArguments =
    { position : OptionalArgument CustomersApi.InputObject.PositionInput }


type alias AddNewBuildingForNewSiteRequiredArguments =
    { label : String
    , site : CustomersApi.InputObject.SiteInput
    , customerId : Int
    }


addNewBuildingForNewSite :
    (AddNewBuildingForNewSiteOptionalArguments -> AddNewBuildingForNewSiteOptionalArguments)
    -> AddNewBuildingForNewSiteRequiredArguments
    -> SelectionSet decodesTo CustomersApi.Object.Building
    -> SelectionSet decodesTo RootMutation
addNewBuildingForNewSite fillInOptionals____ requiredArgs____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { position = Absent }

        optionalArgs____ =
            [ Argument.optional "position" filledInOptionals____.position CustomersApi.InputObject.encodePositionInput ]
                |> List.filterMap Basics.identity
    in
    Object.selectionForCompositeField "addNewBuildingForNewSite" (optionalArgs____ ++ [ Argument.required "label" requiredArgs____.label Encode.string, Argument.required "site" requiredArgs____.site CustomersApi.InputObject.encodeSiteInput, Argument.required "customerId" requiredArgs____.customerId Encode.int ]) object____ Basics.identity


type alias AddNewBuildingForNewCustomerOptionalArguments =
    { position : OptionalArgument CustomersApi.InputObject.PositionInput }


type alias AddNewBuildingForNewCustomerRequiredArguments =
    { label : String
    , site : CustomersApi.InputObject.SiteInput
    , customer : CustomersApi.InputObject.CustomerInput
    }


addNewBuildingForNewCustomer :
    (AddNewBuildingForNewCustomerOptionalArguments -> AddNewBuildingForNewCustomerOptionalArguments)
    -> AddNewBuildingForNewCustomerRequiredArguments
    -> SelectionSet decodesTo CustomersApi.Object.Building
    -> SelectionSet decodesTo RootMutation
addNewBuildingForNewCustomer fillInOptionals____ requiredArgs____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { position = Absent }

        optionalArgs____ =
            [ Argument.optional "position" filledInOptionals____.position CustomersApi.InputObject.encodePositionInput ]
                |> List.filterMap Basics.identity
    in
    Object.selectionForCompositeField "addNewBuildingForNewCustomer" (optionalArgs____ ++ [ Argument.required "label" requiredArgs____.label Encode.string, Argument.required "site" requiredArgs____.site CustomersApi.InputObject.encodeSiteInput, Argument.required "customer" requiredArgs____.customer CustomersApi.InputObject.encodeCustomerInput ]) object____ Basics.identity


type alias DeleteBuildingRequiredArguments =
    { id : Int }


deleteBuilding :
    DeleteBuildingRequiredArguments
    -> SelectionSet (Maybe CustomersApi.ScalarCodecs.Void) RootMutation
deleteBuilding requiredArgs____ =
    Object.selectionForField "(Maybe ScalarCodecs.Void)" "deleteBuilding" [ Argument.required "id" requiredArgs____.id Encode.int ] (CustomersApi.ScalarCodecs.codecs |> CustomersApi.Scalar.unwrapCodecs |> .codecVoid |> .decoder |> Decode.nullable)

-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module CustomersApi.Scalar exposing (Codecs, Decimal(..), Void(..), defaultCodecs, defineCodecs, unwrapCodecs, unwrapEncoder)

import Graphql.Codec exposing (Codec)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode
import Json.Decode as Decode exposing (Decoder)
import Json.Encode as Encode


type Decimal
    = Decimal String


type Void
    = Void String


defineCodecs :
    { codecDecimal : Codec valueDecimal
    , codecVoid : Codec valueVoid
    }
    -> Codecs valueDecimal valueVoid
defineCodecs definitions =
    Codecs definitions


unwrapCodecs :
    Codecs valueDecimal valueVoid
    ->
        { codecDecimal : Codec valueDecimal
        , codecVoid : Codec valueVoid
        }
unwrapCodecs (Codecs unwrappedCodecs) =
    unwrappedCodecs


unwrapEncoder :
    (RawCodecs valueDecimal valueVoid -> Codec getterValue)
    -> Codecs valueDecimal valueVoid
    -> getterValue
    -> Graphql.Internal.Encode.Value
unwrapEncoder getter (Codecs unwrappedCodecs) =
    (unwrappedCodecs |> getter |> .encoder) >> Graphql.Internal.Encode.fromJson


type Codecs valueDecimal valueVoid
    = Codecs (RawCodecs valueDecimal valueVoid)


type alias RawCodecs valueDecimal valueVoid =
    { codecDecimal : Codec valueDecimal
    , codecVoid : Codec valueVoid
    }


defaultCodecs : RawCodecs Decimal Void
defaultCodecs =
    { codecDecimal =
        { encoder = \(Decimal raw) -> Encode.string raw
        , decoder = Object.scalarDecoder |> Decode.map Decimal
        }
    , codecVoid =
        { encoder = \(Void raw) -> Encode.string raw
        , decoder = Object.scalarDecoder |> Decode.map Void
        }
    }
